{"version":3,"sources":["cmps/PadPreview.jsx","cmps/PadList.jsx","services/padService.js","pages/Home.jsx","cmps/AppHeader.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["PadPreview","pad","activeTracks","manageQueue","isLoopRunning","toggleLoopRunning","loopFile","useRef","useState","isPlaying","toggleIsPlaying","useEffect","current","Audio","fileUrl","onended","onLoopEnd","a","find","track","_id","currentTime","play","console","log","duration","setTimeout","onTogglePlay","pause","className","onClick","style","backgroundColor","bgc","PadList","pads","map","padService","query","PUBLIC_URL","process","title","Home","setActiveTracks","includes","filter","padId","window","location","reload","length","xmlns","xmlnsXlink","x","y","viewBox","xmlSpace","height","width","d","fill","AppHeader","src","alt","to","href","stroke","strokeWidth","strokeLinecap","strokeLinejoin","App","path","component","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9e82187f.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\"\r\n\r\nexport const PadPreview = ({ pad, activeTracks, manageQueue, isLoopRunning, toggleLoopRunning }) => {\r\n\r\n    let loopFile = useRef()\r\n    const [isPlaying, toggleIsPlaying] = useState(false)\r\n\r\n    useEffect(() => {\r\n        loopFile.current = new Audio(pad.fileUrl)\r\n        loopFile.current.onended = onLoopEnd\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (!isLoopRunning && activeTracks.find(track => track === pad._id)) {\r\n                loopFile.current.currentTime = 0;\r\n                await loopFile.current.play()\r\n                console.log(loopFile.current.duration)\r\n                setTimeout(() => toggleLoopRunning(true), 5) // ( setTimeout needed for progress-bar )\r\n            }\r\n        })()\r\n    })\r\n\r\n    const onLoopEnd = () => toggleLoopRunning(false)\r\n\r\n    const onTogglePlay = async () => {\r\n        if (isPlaying) {\r\n            loopFile.current.pause()\r\n            loopFile.current.currentTime = 0\r\n            toggleLoopRunning(false)\r\n        }\r\n        toggleIsPlaying(!isPlaying)\r\n        manageQueue(pad)\r\n    }\r\n\r\n    return <article className={`pad-preview ${isPlaying ? 'active' : ''}`}>\r\n        <button onClick={onTogglePlay} style={{ backgroundColor: pad.bgc }}>\r\n            {/* <span>{pad.title}</span> */}\r\n        </button>\r\n    </article>\r\n}","import { PadPreview } from './PadPreview.jsx'\r\n\r\nexport const PadList = ({ pads, activeTracks, manageQueue, isLoopRunning, toggleLoopRunning }) => {\r\n\r\n    return <section className=\"pad-list main-layout\">\r\n        {pads.map(pad => {\r\n            return <PadPreview key={pad._id} pad={pad} activeTracks={activeTracks} manageQueue={manageQueue}\r\n                isLoopRunning={isLoopRunning} toggleLoopRunning={toggleLoopRunning} />\r\n        })}\r\n    </section>\r\n}","export const padService = {\r\n    query\r\n}\r\n\r\nfunction query() {\r\n    \r\n    const { PUBLIC_URL } = process.env\r\n\r\n    return [\r\n        {\r\n            _id: 'p101',\r\n            title: '120_future_funk_beats_25',\r\n            fileUrl: `${PUBLIC_URL}/sounds/120_future_funk_beats_25.mp3`,\r\n            bgc: '#2da254',\r\n        },\r\n        {\r\n            _id: 'p102',\r\n            title: '120_stutter_breakbeats_16',\r\n            fileUrl: `${PUBLIC_URL}/sounds/120_stutter_breakbeats_16.mp3`,\r\n            bgc: '#ca9d2a',\r\n        },\r\n        {\r\n            _id: 'p103',\r\n            title: 'Bass Warwick heavy funk groove on E 120 BPM',\r\n            fileUrl: `${PUBLIC_URL}/sounds/Bass Warwick heavy funk groove on E 120 BPM.mp3`,\r\n            bgc: '#c32e2e',\r\n        },\r\n        {\r\n            _id: 'p104',\r\n            title: 'electric guitar coutry slide 120bpm - B',\r\n            fileUrl: `${PUBLIC_URL}/sounds/electric guitar coutry slide 120bpm - B.mp3`,\r\n            bgc: '#2d69a2',\r\n        },\r\n        {\r\n            _id: 'p105',\r\n            title: 'FUD_120_StompySlosh',\r\n            fileUrl: `${PUBLIC_URL}/sounds/FUD_120_StompySlosh.mp3`,\r\n            bgc: '#832da2',\r\n        },\r\n        {\r\n            _id: 'p106',\r\n            title: 'GrooveB_120bpm_Tanggu',\r\n            fileUrl: `${PUBLIC_URL}/sounds/GrooveB_120bpm_Tanggu.mp3`,\r\n            bgc: '#a9bb32',\r\n        },\r\n        {\r\n            _id: 'p107',\r\n            title: 'MazePolitics_120_Perc',\r\n            fileUrl: `${PUBLIC_URL}/sounds/MazePolitics_120_Perc.mp3`,\r\n            bgc: '#2d9fa2',\r\n        },\r\n        {\r\n            _id: 'p108',\r\n            title: 'PAS3GROOVE1.03B',\r\n            fileUrl: `${PUBLIC_URL}/sounds/PAS3GROOVE1.03B.mp3`,\r\n            bgc: '#509de6',\r\n        },\r\n        {\r\n            _id: 'p109',\r\n            title: 'SilentStar_120_Em_OrganSynth',\r\n            fileUrl: `${PUBLIC_URL}/sounds/SilentStar_120_Em_OrganSynth.mp3`,\r\n            bgc: '#a22d7b',\r\n        },\r\n    ]\r\n}","import { useState } from 'react'\r\nimport { PadList } from '../cmps/PadList'\r\nimport { padService } from '../services/padService'\r\n\r\nexport const Home = () => {\r\n\r\n    let pads = padService.query()\r\n    const [activeTracks, setActiveTracks] = useState([])\r\n    const [isLoopRunning, toggleLoopRunning] = useState(false)\r\n\r\n    const manageQueue = pad => {\r\n        if (activeTracks.includes(pad._id)) {\r\n            setActiveTracks(activeTracks.filter(padId => {\r\n                return padId !== pad._id\r\n            }))\r\n        }\r\n        else setActiveTracks([...activeTracks, pad._id])\r\n    }\r\n\r\n    return <section className=\"home-page\">\r\n        <PadList pads={pads} activeTracks={activeTracks} manageQueue={manageQueue}\r\n            isLoopRunning={isLoopRunning} toggleLoopRunning={toggleLoopRunning} />\r\n        <div className=\"global-play-container\">\r\n            <button onClick={() => window.location.reload()}>\r\n                {activeTracks.length ? <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n                    viewBox=\"0 0 480 480\" xmlSpace=\"preserve\" height=\"40px\" width=\"40px\">\r\n                    <path d=\"M240,0C107.452,0,0,107.452,0,240s107.452,240,240,240c132.486-0.15,239.85-107.514,240-240C480,107.452,372.548,0,240,0z\r\n\t\t\t M240,464C116.288,464,16,363.712,16,240S116.288,16,240,16c123.653,0.141,223.859,100.347,224,224\r\n\t\t\tC464,363.712,363.712,464,240,464z\"/>\r\n                    <path d=\"M200,136c-4.418,0-8,3.582-8,8v192c0,4.418,3.582,8,8,8s8-3.582,8-8V144C208,139.582,204.418,136,200,136z\" />\r\n                    <path d=\"M280,136c-4.418,0-8,3.582-8,8v192c0,4.418,3.582,8,8,8s8-3.582,8-8V144C288,139.582,284.418,136,280,136z\" />\r\n                </svg>\r\n                    : <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n                        viewBox=\"0 0 512 512\" xmlSpace=\"preserve\" height=\"40px\" width=\"40px\">\r\n                        <path d=\"M256,0C114.833,0,0,114.844,0,256s114.833,256,256,256s256-114.844,256-256S397.167,0,256,0z M256,490.667\r\n\t\t\t\tC126.604,490.667,21.333,385.396,21.333,256S126.604,21.333,256,21.333S490.667,126.604,490.667,256S385.396,490.667,256,490.667\r\n\t\t\t\tz\"/>\r\n                        <path d=\"M357.771,247.031l-149.333-96c-3.271-2.135-7.5-2.25-10.875-0.396C194.125,152.51,192,156.094,192,160v192\r\n\t\t\t\tc0,3.906,2.125,7.49,5.563,9.365c1.583,0.865,3.354,1.302,5.104,1.302c2,0,4.021-0.563,5.771-1.698l149.333-96\r\n\t\t\t\tc3.042-1.958,4.896-5.344,4.896-8.969S360.813,248.99,357.771,247.031z M213.333,332.458V179.542L332.271,256L213.333,332.458z\"\r\n                        />\r\n                    </svg>}\r\n            </button>\r\n            <button>\r\n                <svg height=\"40px\" viewBox=\"0 0 512 512\" width=\"40px\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"m512 256c0 141.386719-114.613281 256-256 256s-256-114.613281-256-256 114.613281-256 256-256 256 114.613281 256 256zm0 0\" fill=\"#e76e54\" />\r\n                    <path d=\"m384 256c0 70.691406-57.308594 128-128 128s-128-57.308594-128-128 57.308594-128 128-128 128 57.308594 128 128zm0 0\" fill=\"#dd523c\" /></svg>\r\n            </button>\r\n            <div className={`play-time-status ${isLoopRunning ? 'active' : ''}`}>\r\n                <span></span>\r\n            </div>\r\n        </div>\r\n    </section>\r\n}","import { NavLink } from 'react-router-dom'\r\n\r\nexport const AppHeader = () => {\r\n\r\n    return <header className=\"app-header\">\r\n        <section className=\"main-layout flex j-between a-center\">\r\n            <div className=\"logo flex a-center\">\r\n                <img src={`${process.env.PUBLIC_URL}/favicon.png`} alt=\"\" />\r\n                <NavLink to=\"/\">BEAT IT</NavLink>\r\n            </div>\r\n            <nav>\r\n                <a href=\"https://github.com/tomleb3/beatit\">\r\n                    <svg stroke=\"currentColor\" fill=\"none\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\" className=\"social-link\" height=\"2em\" width=\"2em\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35\r\n                         6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65\r\n                          16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44\r\n                           5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"></path>\r\n                    </svg>\r\n                </a>\r\n            </nav>\r\n        </section>\r\n    </header>\r\n}","import { Switch, Route } from 'react-router-dom'\nimport { Home } from './pages/Home.jsx'\nimport { AppHeader } from './cmps/AppHeader.jsx'\n// import { AppFooter } from './cmps/AppFooter.jsx'\n\nexport function App() {\n  return (\n    <main className=\"App\">\n      <AppHeader />\n      <Switch>\n        <Route path=\"/\" component={Home} />\n      </Switch>\n      {/* <AppFooter /> */}\n    </main>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport { HashRouter as Router } from 'react-router-dom'\nimport './styles/global.scss'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.unregister()\nreportWebVitals()\n"],"sourceRoot":""}